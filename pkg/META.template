version = "%%VERSION%%"
description = "Websocket library"
requires = "ppx_deriving.std cohttp ocplib-endian astring %%META_REQ%%"
archive(byte) = "websocket.cma"
archive(byte, plugin) = "websocket.cma"
archive(native) = "websocket.cmxa"
archive(native, plugin) = "websocket.cmxs"
exists_if = "websocket.cma"
package "lwt" (
  version = "%%VERSION%%"
  description = "Websocket library, for Lwt"
  requires = "websocket cohttp.lwt %%LWT_REQ%%"
  archive(byte) = "websocket_lwt.cma"
  archive(byte, plugin) = "websocket_lwt.cma"
  archive(native) = "websocket_lwt.cmxa"
  archive(native, plugin) = "websocket_lwt.cmxs"
  exists_if = "websocket_lwt.cma"
)
package "cohttp" (
  version = "%%VERSION%%"
  description = "Websocket library, for cohttp/lwt upgrades"
  requires = "websocket cohttp.lwt %%LWT_REQ%%"
  archive(byte) = "websocket_cohttp_lwt.cma"
  archive(byte, plugin) = "websocket_cohttp_lwt.cma"
  archive(native) = "websocket_cohttp_lwt.cmxa"
  archive(native, plugin) = "websocket_cohttp_lwt.cmxs"
  exists_if = "websocket_cohttp_lwt.cma"
)
package "async" (
  version = "%%VERSION%%"
  description = "Websocket library, for Async"
  requires = "websocket cohttp.async %%ASYNC_REQ%%"
  archive(byte) = "websocket_async.cma"
  archive(byte, plugin) = "websocket_async.cma"
  archive(native) = "websocket_async.cmxa"
  archive(native, plugin) = "websocket_async.cmxs"
  exists_if = "websocket_async.cma"
)
